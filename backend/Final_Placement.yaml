openapi: 3.0.0
info:
  title: Placement Portal
  description: >
    <div>In this Project, we have created a RESTful API, database models using Flask-RESTful  and lask-SQLAlchemy for the Project of Placement Portal.
    <br>
    <br>
    <br>
    <br>
    </ol>
    </div>
    <img src ="https://mermaid.ink/img/pako:eNpl0cFqxCAQBuBXkTnvvkBupb0WCm1vgTLo312h6qJjoWTz7p1Ek11aT2H85neiE9nkQAMhP3k-ZQ5jNLreC7KZr8djmszbOYOdGUzV4od3TfTqtZmXVESFrMXdrCldPKYYYcWnqG6kguhaGjV7t986nlEKn2CU231vj34oBSUgypa_nqVUB5B0G1PhxWeO0tmtbzC8fd-lNvwnlHt5d_-G3eRIGRb-u_8aHSggB_ZOr3haekeSMwJGWqzDJ9cvWa5gVspV0utPtDRIrjhQvTgW9HdpxfkXruKTMg?type=png"/>
    
    
    <h3> User Table Schema </h3>
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>User_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>Name</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>Password</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>      
      <tr>
        <td>Email </td>
        <td>String</td>
        <td></td>
      </tr>      
    <tr>
        <td>Category </td>
        <td>String</td>
        <td></td>
      </tr>  
    </tbody>
    </table>

    <h3> Thread Table Schema </h3>
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>Thread_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>User_Id</td>
        <td>String</td>
        <td>Foreign Key from User</td>
      </tr>
      <tr>
        <td>Thread_Count</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>      
      <tr>
        <td>Title</td>
        <td>String</td>
        <td></td>
      </tr>    
            <tr>
        <td>Thread_Map</td>
        <td>String</td>
        <td></td>
      </tr>  
    </tbody>
    </table>


    <h3> Post Table Schema </h3>
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>Post_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
            <tr>
        <td>Thread_id</td>
        <td>Integer</td>
        <td>Foreign Key from Tracker</td>
      </tr>
      <tr>
        <td>Annoynmous</td>
        <td>String</td>
      </tr>
      <tr>
        <td>Post_Message</td>
        <td>String</td>
      </tr>
      <tr>
        <td>Title</td>
        <td>String</td>
      </tr>
    </tbody>
    </table>
    
    
    
 
    <h3> Assesment Table Schema </h3>
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>Assesment_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
            <tr>
        <td>creator_id</td>
        <td>Integer</td>
        <td>Foreign Key from User</td>
      </tr>
            <tr>
        <td>Name</td>
        <td>String</td>
      </tr>
      <tr>
        <td>Student_Count</td>
        <td>Integer</td>
      </tr>
      <tr>
        <td>Quiz</td>
        <td>String</td>
      </tr>
      <tr>
        <td>Toppers</td>
        <td>String</td>
      </tr>
 
    </tbody>
    </table>


    <h3> Aspirant Table Schema </h3>
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>Aspirant_id</td>
        <td>Integer</td>
        <td>Foreign Key from User</td>
      </tr>
            <tr>
        <td>Assesment_id</td>
        <td>Integer</td>
        <td>Foreign Key from User</td>
      </tr>
      <tr>
        <td>Aspirant_Score</td>
        <td>Integer</td>
      </tr>
    </tbody>
    </table>



    <h3> Connection Table Schema </h3>
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>Connection_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
            <tr>
        <td>sender_id</td>
        <td>Integer</td>
        <td>Foreign Key from User</td>
      </tr>
      <tr>
        <td>receiver_id</td>
        <td>Integer</td>
        <td>Foreign Key from User</td>
      </tr>
      <tr>
        <td>Approval_Status</td>
        <td>String</td>
      </tr>
      <tr>
        <td>Connection_Map</td>
        <td>String</td>
      </tr>
    </tbody>
    </table>
    
    
 
    <h3> Message Table Schema </h3>
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>message_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
            <tr>
        <td>connection_id</td>
        <td>Integer</td>
        <td>Foreign Key from Connection</td>
      </tr>
      <tr>
        <td>Content</td>
        <td>String</td>
      </tr>
    </tbody>
    </table>

    </tbody>
    </table>

  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/
paths:
  /api/{user_id}/{password}:
    description: End point to read, update and delete a course resource with course_id = courseId.
    get:
      tags:
        - user
      description: Operation to get User Details
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          name: password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  user_id:
                    type: string
                  Name:
                    type: string
                  email:
                    type: string
                  password:
                    type: string       
                  Category:
                    type: string
        '500':
          description: Internal Server Error
        '404':
          description: User not found

    put:
      tags:
        - user
      description: Operation to update the User details
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  Name:
                    type: string
                  email:
                    type: string
                  password:
                    type: string       
                  Category:
                    type: string
      responses:
        '200':
          description: Successfuly updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  user_id:
                    type: integer
                  Name:
                    type: string
                  email:
                    type: string
                  password:
                    type: string   
                  Category:
                    type: string
        '404':
          description: User not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      tags:
        - user
      description: Operation to delete the User details
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Deleted
        '404':
          description: User not found
        '500':
          description: Intenal Server Error

  /api/user/CreateUser:
    description: End point to create User Account
    post:
      tags:
        - user
      description: Operation to create the User accoung
      requestBody:
        content:
          application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  Name:
                    type: string
                  email:
                    type: string
                  password:
                    type: string   
                  Category:
                    type: string
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  user_id:
                    type: integer
                  Name:
                    type: string
                  email:
                    type: string
                  password:
                    type: string   
                  Category:
                    type: string
        '409':
          description: user already exist
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
  /api/{user_id}/{password}/{thread_id}:
    description: Url to read, update and delete the student resource.
    get:
      tags:
        - thread
      description: Operation to read student resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: thread_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  Title:
                    type: string
                  thread_id:
                    type: integer
                  user_id:
                    type: integer
                  Thread_Count:
                    type: integer
                  Thread_Map:
                    type: string
        '500':
          description: Internal server error
        '404':
          description: Student not found

    put:
      tags:
        - thread
      description: Operation to update the student resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: thread_id
          required: true
          schema:  
            type: integer
            example: 10
      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  Title:
                    type: string
                  thread_id:
                    type: integer
                  user_id:
                    type: integer
                  Thread_Count:
                    type: integer
                  Thread_Map:
                    type: string
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  Title:
                    type: string
                  thread_id:
                    type: integer
                  user_id:
                    type: integer
                  Thread_Count:
                    type: integer
                  Thread_Map:
                    type: string
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      tags:
        - thread
      description: Operation to delete the course resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: thread_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully Deleted
        '500':
          description: Internal Server Error
        '404':
          description: Student not found

  /api/{user_id}/{password}/CreateThread:
    description: Url to create student resource
    post:
      tags:
        - thread
      description: Operation to create the student resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
              schema:
                type: object
                required:
                  - thread_id
                properties:
                  Title:
                    type: string
 
                  Thread_Count:
                    type: integer
                  Thread_Map:
                    type: string
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  Name:
                    type: string
                  thread_id:
                    type: integer
                  Title:
                    type: string
                  Thread_count:
                    type: integer
                  Thread_Map:
                    type: string
                  user_id:
                    type: integer
        '409':
          description: Student already exist
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string

  /api/{user_id}/{password}/{thread_id}/{post_id}:
    description: Url to get the the list of enrollments a student with student_id is enrolled in.
    get:
      tags:
        - post
      description: URL to get the post details about Posts made by users in a thread.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: thread_id
          required: true
          schema:
            type: integer
            example: 10
        - in: path
          name: post_id
          required: true
          schema:
            type: integer
            example: 10
           
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - post_id
                properties:
                  post_id:
                    type: integer
                  thread_id:
                    type: integer
                  Title:
                    type: string
                  Post_Message:
                    type: string
                  Annoynmous:
                    type: string
        '400':
          description: Invalid Student Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: Student is not enrolled in any course
        '500':
          description: Internal Server Error

    put:
      tags:
        - post
      description: URL to update the post details about Posts made by users in a thread.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: thread_id
          required: true
          schema:
            type: integer
            example: 10
        - in: path
          name: post_id
          required: true
          schema:
            type: integer
            example: 10
      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  Title:
                    type: string
                  Post_Message:
                    type: string
                  Annoynmous:
                    type: string
      responses:
        '201':
          description: Post Updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  post_id:
                    type: integer
                  thread_id:
                    type: integer
                  Title:
                    type: string
                  Post_Message:
                    type: string
                  Annoynmous:
                    type: string
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      tags:
        - post
      description: URL to delete a post in a thread.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: thread_id
          required: true
          schema:
            type: integer
            example: 10
        - in: path
          name: post_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully deleted
        '400':
          description: Invalid Student Id or Course Id.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: Enrollment for the student not found
        '500':
          description: Internal Server Error
 
  /api/{user_id}/{password}/{thread_id}/CreatePost:
    description: URL to create posts in a thread.
    post:
      tags:
        - post
      description: Operation to update the student resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: thread_id
          required: true
          schema:
            type: integer
            example: 10

      requestBody:
        content:
          application/json:
              schema:
                type: object
                required:
                  - post_id
                properties:
                  Title:
                    type: string
                  Post_Message:
                    type: string
                  Annoynmous:
                    type: string
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - post_id
                properties:
                  post_id:
                    type: integer
                  thread_id:
                    type: integer
                  Title:
                    type: string
                  Post_Message:
                    type: string
                  Annoynmous:
                    type: string
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
                   
  /api/{user_id}/{password}/Assesment/{assesment_id}:
    description: Url to get Assesment Details
    get:
      tags:
        - assesment
      description: Operation to read,delete update assesments
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: assesment_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  Name:
                    type: string
                  assesment_id:
                    type: integer
                  creator_id:
                    type: integer
                  Quiz:
                    type: string
                  Student_count:
                    type: integer
                  Toppers:
                    type: integer
        '500':
          description: Internal server error
        '404':
          description: Student not found

    put:
      tags:
        - assesment
      description: Operation to update the assesment
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: assesment_id
          required: true
          schema:  
            type: integer
            example: 10
      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  Name:
                    type: string
                  Quiz:
                    type: string
                  Student_count:
                    type: integer
                  Toppers:
                    type: string
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  Name:
                    type: string
                  assesment_id:
                    type: integer
                  creator_id:
                    type: integer
                  Quiz:
                    type: string
                  Student_count:
                    type: integer
                  Toppers:
                    type: string
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      tags:
        - assesment
      description: Operation to delete the assesments
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: assesment_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully Deleted
        '500':
          description: Internal Server Error
        '404':
          description: Student not found

  /api/{user_id}/{password}/CreateAssesment:
    description: Url to create student resource
    post:
      tags:
        - assesment
      description: Operation to create the assesments
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
              schema:
                type: object
                required:
                  - assesment_id
                properties:
                  Name:
                    type: string
                  Quiz:
                    type: string
                  Toppers:
                    type: string
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  Name:
                    type: string
                  assesment_id:
                    type: integer
                  creator_id:
                    type: integer
                  Quiz:
                    type: string
                  Student_count:
                    type: integer
                  Toppers:
                    type: string
        '409':
          description: Student already exist
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
                    

                   
  /api/{user_id}/{password}/{assesment_id}/Aspirant:
    description: Url to get Aspirant Details
    get:
      tags:
        - aspirant
      description: Operation to read,delete update aspirants
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: assesment_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  assesment_id:
                    type: integer
                  aspirant_id:
                    type: integer
                  aspirant_score:
                    type: integer
        '500':
          description: Internal server error
        '404':
          description: Student not found

    put:
      tags:
        - aspirant
      description: Operation to update the aspirant
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: assesment_id
          required: true
          schema:
            type: integer
            example: 10
      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  aspirant_score:
                    type: integer
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  assesment_id:
                    type: integer
                  aspirant_id:
                    type: integer
                  aspirant_score:
                    type: integer
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      tags:
        - aspirant
      description: Operation to delete the assesments
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: assesment_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully Deleted
        '500':
          description: Internal Server Error
        '404':
          description: Student not found

  /api/{user_id}/{password}/{assesment_id}/CreateAspirant:
    description: Url to create student resource
    post:
      tags:
        - aspirant
      description: Operation to create the Aspirant
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: assesment_id
          required: true
          schema:
            type: integer
            example: 10
      requestBody:
        content:
          application/json:
              schema:
                type: object
                required:
                  - assesment_id
                properties:
                  aspirant_score:
                    type: integer
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  assesment_id:
                    type: integer
                  aspirant_id:
                    type: integer
                  aspirant_score:
                    type: integer
        '409':
          description: Student already exist
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
 
 
  /api/{user_id}/{password}/Connection/{connection_id}:
    description: Url to read, update and delete the student resource.
    get:
      tags:
        - connection
      description: Operation to read student resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  connection_id:
                    type: integer
                  Approval_Status:
                    type: string
                  Connection_Map:
                    type: string
                  sender_id:
                    type: integer
                  receiver_id:
                    type: integer
        '500':
          description: Internal server error
        '404':
          description: Student not found

    put:
      tags:
        - connection
      description: Operation to update the student resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:  
            type: integer
            example: 10
      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  Approval_Status:
                    type: string
                  Connection_Map:
                    type: string
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  connection_id:
                    type: integer
                  Approval_Status:
                    type: string
                  Connection_Map:
                    type: string
                  sender_id:
                    type: integer
                  receiver_id:
                    type: integer
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      tags:
        - connection
      description: Operation to delete the course resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully Deleted
        '500':
          description: Internal Server Error
        '404':
          description: Student not found

  /api/{user_id}/{password}/CreateConnection:
    description: Url to create student resource
    post:
      tags:
        - connection
      description: Operation to create the student resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
              schema:
                type: object
                required:
                  - connection_id
                properties:
                  Connection_Map:
                    type: string
                  receiver_id:
                    type: integer
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  connection_id:
                    type: integer
                  Approval_Status:
                    type: string
                  Connection_Map:
                    type: string
                  sender_id:
                    type: integer
                  receiver_id:
                    type: integer
        '409':
          description: Connetion already exist
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string                 
  /api/{user_id}/{password}/{connection_id}/Message/{message_id}:
    description: Url to get the the list of enrollments a student with student_id is enrolled in.
    get:
      tags:
        - message
      description: URL to get the message details about messages made by users in a connection.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: integer
            example: 10
        - in: path
          name: message_id
          required: true
          schema:
            type: integer
            example: 10
           
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - message_id
                properties:
                  message_id:
                    type: integer
                  connection_id:
                    type: integer
                  Content:
                    type: string
        '400':
          description: Invalid Student Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: Student is not enrolled in any course
        '500':
          description: Internal Server Error

    put:
      tags:
        - message
      description: URL to update the message details about messages made by users in a connection.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: integer
            example: 10
        - in: path
          name: message_id
          required: true
          schema:
            type: integer
            example: 10
      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  Content:
                    type: string
      responses:
        '201':
          description: message Updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                properties:
                  Content:
                    type: string
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      tags:
        - message
      description: URL to delete a message in a connection.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: integer
            example: 10
        - in: path
          name: message_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully deleted
        '400':
          description: Invalid Student Id or Course Id.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: Enrollment for the student not found
        '500':
          description: Internal Server Error
 
  /api/{user_id}/{password}/{connection_id}/CreateMessage:
    description: URL to create messages in a connection.
    post:
      tags:
        - message
      description: Operation to update the student resource
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: integer
            example: 10

      requestBody:
        content:
          application/json:
              schema:
                type: object
                required:
                  - message_id
                properties:
                  Content:
                    type: string
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - message_id
                properties:
                  message_id:
                    type: integer
                  connection_id:
                    type: integer
                  Content:
                    type: string
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
                    
                    
                    
                    
                    
                    
                    
                    
                
  /api/{user_id}/{password}/{tracker_id}/Trendline&Stats:
    summary: End to End point for getting Stats
    description: End to End point for getting Stats
    get:
      tags:
        - Stats&TrendLine
      description: URL to get the list of enrollments, the student is enrolled in. This path belongs to the Enrollment table.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: password
          required: true
          schema:
            type: string
        - in: path
          name: tracker_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
        '400':
          description: Invalid Student Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: Student is not enrolled in any course
        '500':
          description: Internal Server Error